#!/usr/bin/env python
PACKAGE = "lidar_detect"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

## add gen.add() smparm=gen.enum() 
## Leafszie z_limit_min z_limit_max y_limit_min y_limit_max x_limit_min x_limit_max 
## 0.2tol -1.4, 0z -40.0, 40.0x -10.0, 10.0y 

#       Name                    Type      Reconfiguration level  
#       Description  
#       Default  Min  Max 
gen.add("Map_xMax",       double_t,   0,
        "Map_xMax",
        20,-80,80)
gen.add("Map_yMax",       double_t,   0,
        "Map_yMax",
        80,-80,80)
gen.add("Map_xMin",       double_t,   0,
        "Map_xMin",
        -20,-80,80)
gen.add("Map_yMin",       double_t,   0,
        "Map_yMin",
        1.5,-80,80)

gen.add("tolerance",            double_t,   0,
        "telerance of EuclideanClusterExtraction",
        0.7,0.01,10)
gen.add("Leafszie",             double_t,   0,
        "leafsize",
        0.2,0,10)
gen.add("buffer",               int_t,      0,
        "buffer",   
        1,0,20) 
gen.add("cellResolution",       double_t,   0,
        "cellResolution",
        0.2,0,20)
gen.add("z_limit_delta",        double_t,   0,
        "z_limit_delta",
        0.1,0.1,0.9)
gen.add("z_limit_min",          double_t,   0,
        "z_limit_min",
        -1.5,-2,4)
gen.add("z_limit_max",          double_t,   0,
        "z_limit_max",
        1,-2,4)
gen.add("x_limit_min",          double_t,   0,
        "x_limit_min",
        -20,-15,15)
gen.add("x_limit_max",          double_t,   0,
        "x_limit_max",
        20,-15,15)
gen.add("y_limit_min",          double_t,   0,
        "y_limit_min",
        1.5,-80,80)
gen.add("y_limit_max",          double_t,   0,
        "y_limit_max",
        30,-80,80)
gen.add("car_width",            double_t,   0,
        "car_width",
        1.7,1.5,2)
gen.add("car_length",           double_t,   0,
        "car_length",
        4.2,3,5)
gen.add("theta_x_lidar",        double_t,   0,
        "theta_x_lidar",
        0,-10,10)
gen.add("theta_y_lidar",        double_t,   0,
        "theta_y_lidar",
        0,-10,10)
gen.add("theta_z_lidar",        double_t,   0,
        "theta_z_lidar",
        0,-10,10)
gen.add("offset_x_lidar",       double_t,   0,
        "offset_x_lidar",
        0,-5,5)
gen.add("offset_y_lidar",       double_t,   0,
        "offset_y_lidar",
        0,-5,5)
gen.add("offset_z_lidar",       double_t,   0,
        "offset_z_lidar",
        0,-5,5)
gen.add("lidar_transform_switch", bool_t,   0,
        "lidar_transform_switch",
        True)
gen.add("MinClusterSize",       double_t,   0,
        "MinClusterSize",
        4,0,100)
gen.add("expanflag", bool_t,   0,
        "gridmap_expand_switch",
        True)
gen.add("dimaticflag", bool_t,   0,
        "dimatic_control_switch",
        False)
gen.add("gridexpanwith",            int_t,   0,
        "int(car_width/(2*ref) unit->grid",
        1,0,8)        

exit(gen.generate(PACKAGE, "lidar_detect", "lidar_detect_mode"))